



Transport Layer Security                                      M. Thomson
Internet-Draft                                                   Mozilla
Intended status: Standards Track                        14 November 2024
Expires: 18 May 2025


 Retrying Encrypted TLS Client Hello with Self-Identifying Key Domains
                   draft-thomson-tls-retch-sik-latest

Abstract

   TODO Abstract

About This Document

   This note is to be removed before publishing as an RFC.

   The latest revision of this draft can be found at
   https://martinthomson.github.io/retch-sik/draft-thomson-tls-retch-
   sik.html.  Status information for this document may be found at
   https://datatracker.ietf.org/doc/draft-thomson-tls-retch-sik/.

   Discussion of this document takes place on the Transport Layer
   Security Working Group mailing list (mailto:tls@ietf.org), which is
   archived at https://mailarchive.ietf.org/arch/browse/tls/.  Subscribe
   at https://www.ietf.org/mailman/listinfo/tls/.

   Source for this draft and an issue tracker can be found at
   https://github.com/martinthomson/retch-sik.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 18 May 2025.

Copyright Notice

   Copyright (c) 2024 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Revised BSD License text as
   described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Revised BSD License.

Table of Contents

   1.  Introduction
     1.1.  Unique Public Names
     1.2.  Recovery of Anonymity Sets
     1.3.  Alternative Authentication for Public Names
   2.  Conventions and Definitions
   3.  Security Considerations
   4.  IANA Considerations
   5.  References
     5.1.  Normative References
     5.2.  Informative References
   Acknowledgments
   Author's Address

1.  Introduction

   The TLS Encrypted Client Hello [ECH] defines a fallback mechanism
   that is used when a client attempts to use outdated or incorrect
   configuration.

   This recovery is an essential feature of ECH, but it contributes to a
   reduction in the size of the anonymity set for connection attempts.
   This reduction occurs when a service needs to use the different
   unprotected server name values.  A server deployment might rely on
   the unprotected server name to route incoming connections or select
   from different configurations.

   The natural way to improve privacy in this setting is to maximize the
   uniformity of information that is revealed to adversaries.  For
   privacy purposes, the ideal arrangement being a single consistent
   configuration across all clients.  However, as the anonymity set that
   results depends on IP address, public name, and other configuration
   parameters, perfect uniformity is essentially impossible to achieve.

   Each server operator might seek to ensure that it uses the minimum
   possible number of configurations to maximize the effective gprivacy.
   However, this can be at odds with operational constraints that might
   push toward having more diverse configurations.

1.1.  Unique Public Names

   This document describes an approach that seeks to improve privacy by
   taking the opposite approach.  Rather than having as few public names
   as possible, it increases the size of the anonymity set for public
   names by using as many public names as possible.

   In the extreme, this might involve having a unique public name for
   each client.  In practice, caching of HTTPS records [RFC9460] will
   ensure that the same public name is likely to be used by some number
   of clients.

   Any reuse of a name will cluster clients into relatively small
   anonymity sets, but any clustering will be based on attributes that
   already leak to a passive observer.  This includes the time, the
   network that a client uses, or the choice of DNS resolver.

   The net effect is that the public name is either unique (used for a
   single connection) or forms a small anonymity set (used for a small
   number of connections).  Such names would include no obvious means of
   correlation that can be used by a passive observer to form a useful
   anonymity set.

   The net effect is similar to publishing multiple encryptions of
   chosen public names.  This increased diversity of public names leads
   to a much larger effective anonymity set, except to the extent.  This
   includes both the public name and HPKE [RFC9180] parameters.
   However, it cannot hide the use of IP addresses if those are
   correlated with a set of server names.

1.2.  Recovery of Anonymity Sets

   This design only permits linking public names based on actual
   observed relations between each hidden name and all of the public
   names that are used for that each hidden name.

   Obviously, the reuse of a name would reveal that two identical names
   share a configuration.  The use of ECH still means that uses of those
   public names could correspond to different hidden names.

   To provide a comprehensible view of the true anonymity set, an
   adversary would need to obtain all public names that are in use
   across all hidden names.  If different names are provided in response
   to every DNS query from an authoritative resolver, an adversary would
   -- at best -- need to query every DNS resolver cache that queries
   that authoritative.  This makes it far more difficult to get a
   precise enumeration of the names that correspond to any given
   anonymity set.

1.3.  Alternative Authentication for Public Names

   This document defines a new method for validating the certificate
   that a server proffers during an ECH retry.  This enables a retry
   process that does not depend on the public key infrastructure that is
   used for server authentication, making it far easier to create new
   public names.

   These names can even overlap with parts of the domain name system.
   The client determines whether a server is authorized to provide an
   ECH retry configuration based on the choice of name alone.  This
   removes any need to rely on anything other than the public key that
   is bound to the name.  This obviates any need for revocation checks,

   This change to public name authentication is the only aspect of this
   document that requires client changes.  This document describes a
   server architecture that helps demonstrate the feasibility of this
   approach, including an analysis of drawbacks.

2.  Conventions and Definitions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

3.  Security Considerations

   TODO Security

4.  IANA Considerations

   This document has no IANA actions.

5.  References

5.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/rfc/rfc2119>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/rfc/rfc8174>.

5.2.  Informative References

   [ECH]      Rescorla, E., Oku, K., Sullivan, N., and C. A. Wood, "TLS
              Encrypted Client Hello", Work in Progress, Internet-Draft,
              draft-ietf-tls-esni-22, 15 September 2024,
              <https://datatracker.ietf.org/doc/html/draft-ietf-tls-
              esni-22>.

   [RFC9180]  Barnes, R., Bhargavan, K., Lipp, B., and C. Wood, "Hybrid
              Public Key Encryption", RFC 9180, DOI 10.17487/RFC9180,
              February 2022, <https://www.rfc-editor.org/rfc/rfc9180>.

   [RFC9460]  Schwartz, B., Bishop, M., and E. Nygren, "Service Binding
              and Parameter Specification via the DNS (SVCB and HTTPS
              Resource Records)", RFC 9460, DOI 10.17487/RFC9460,
              November 2023, <https://www.rfc-editor.org/rfc/rfc9460>.

Acknowledgments

   TODO acknowledge.

Author's Address

   Martin Thomson
   Mozilla
   Email: mt@lowentropy.net
